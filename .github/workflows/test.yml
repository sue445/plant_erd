name: test

on:
  - push

env:
  GO111MODULE: "on"
  TEST_ARGS: -coverprofile coverage.out -covermode atomic

jobs:
  mysql:
    name: MySQL

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        mysql_version:
          - 5.6
          - 5.7
          - 8

    services:
      mysql:
        image: mysql:${{ matrix.mysql_version }}
        ports:
          - 3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: plant_erd_test

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run test
        run: |
          set -xe
          make test
          make testrace
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports['3306'] }}
          MYSQL_HOST: localhost
          MYSQL_USER: root
          MYSQL_PASSWORD: root
          MYSQL_DATABASE: plant_erd_test

      - name: Slack Notification (not success)
        uses: homoluctus/slatify@v2.0.0
        if: "! success()"
        with:
          job_name: '*build*'
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  postgresql:
    name: PostgreSQL

    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        postgresql_version:
          - 9-alpine
          - 10-alpine
          - 11-alpine
          - 12-alpine

    services:
      postgresql:
        image: postgres:${{ matrix.postgresql_version }}
        ports:
          - 5432
        env:
          POSTGRES_DB: plant_erd_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run test
        run: |
          set -xe
          make test
          make testrace
        env:
          POSTGRES_PORT: ${{ job.services.postgresql.ports['5432'] }}
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DATABASE: plant_erd_test

      - name: Slack Notification (not success)
        uses: homoluctus/slatify@v2.0.0
        if: "! success()"
        with:
          job_name: '*build*'
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  coverage:
    name: Coverage

    runs-on: ubuntu-latest

    env:
      CC_TEST_REPORTER_ID:  ${{ secrets.CC_TEST_REPORTER_ID }}

    services:
      mysql:
        image: mysql
        ports:
          - 3306
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: plant_erd_test

      postgresql:
        image: postgres
        ports:
          - 5432
        env:
          POSTGRES_DB: plant_erd_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Setup cc-test-reporter
        run: |
          set -xe
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

      - name: Run test
        run: |
          set -xe
          make test
          make testrace
        env:
          MYSQL_PORT: ${{ job.services.mysql.ports['3306'] }}
          MYSQL_HOST: localhost
          MYSQL_USER: root
          MYSQL_PASSWORD: root
          MYSQL_DATABASE: plant_erd_test
          POSTGRES_PORT: ${{ job.services.postgresql.ports['5432'] }}
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DATABASE: plant_erd_test

      - name: Teardown cc-test-reporter
        if: always()
        run: |
          ./cc-test-reporter after-build --exit-code $?

      - name: Convert coverage to lcov
        uses: jandelgado/gcov2lcov-action@v1.0.0
        with:
          infile: coverage.out
          outfile: coverage.lcov

      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: coverage.lcov

      - name: Slack Notification (not success)
        uses: homoluctus/slatify@v2.0.0
        if: "! success()"
        with:
          job_name: '*build*'
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run lint
        run: |
          set -xe
          export GOPATH=`go env GOPATH`
          export PATH=$GOPATH/bin:$PATH
          go get -u golang.org/x/lint/golint

          make fmtci
          make lint
          make vet

      - name: Slack Notification (not success)
        uses: homoluctus/slatify@v2.0.0
        if: "! success()"
        with:
          job_name: '*build*'
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  integration_test:
    name: integration_test
    runs-on: ubuntu-latest

    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v1

      - uses: actions/cache@v1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Run integration_test
        run: make integration_test

      - name: Slack Notification (not success)
        uses: homoluctus/slatify@v2.0.0
        if: "! success()"
        with:
          job_name: '*build*'
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}

  notify:
    needs:
      - mysql
      - postgresql
      - coverage
      - lint
      - integration_test

    runs-on: ubuntu-latest

    steps:
      - name: Slack Notification (success)
        uses: homoluctus/slatify@v2.0.0
        if: always()
        with:
          job_name: '*build*'
          type: ${{ job.status }}
          icon_emoji: ":octocat:"
          url: ${{ secrets.SLACK_WEBHOOK }}
          token: ${{ secrets.GITHUB_TOKEN }}
